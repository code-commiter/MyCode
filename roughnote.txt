// Function to remove both multi-line (/*...*/) and single-line (//...) comments
// and check for variable declarations. Returns true if valid, false if invalid.
def isFileValid(String content) {
    boolean inMultiLineComment = false
    int nestedLevel = 0

    // Split the content into lines for easier handling
    content.eachLine { line ->
        // Check for multi-line comments (/* ... */)
        if (line.contains("/*")) {
            inMultiLineComment = true
            nestedLevel += 1
        }

        // If we're inside a multi-line comment, skip this line
        if (!inMultiLineComment) {
            // Remove single-line comments (// ...)
            String cleanedLine = line.replaceAll(/\/\/.*$/, "").trim() // Remove comments and trim whitespace

            // If the line is not empty after removing comments, check for variable declarations
            if (cleanedLine) {
                // Check for variable declarations (simple check for 'def' or type)
                // This regex matches common variable declarations in Groovy
                def varPattern = /\b(def|int|String|boolean|double|float|long|char|List|Map|Set|ArrayList|HashMap|HashSet)\s+\w+/
                def matches = cleanedLine.findAll(varPattern)

                // If matches are found, the file is invalid; return false immediately
                if (matches) {
                    return false // Early exit
                }
            }
        }

        // Check for closing of multi-line comments (*/)
        if (line.contains("*/")) {
            nestedLevel -= 1
            if (nestedLevel == 0) {
                inMultiLineComment = false
            }
        }
    }

    // If no variable declarations were found, return true (valid)
    return true
}

// Example content with multi-line and single-line comments and variable declarations
String exampleContentValid = ''' 
/* 
This is a multi-line comment
/* Another comment block (nested) */
But this should still be inside the same comment block.
*/ 

pipeline {
    agent any // This is a single-line comment
    stages {
        stage('Build') { 
            steps {
                echo 'Building...' 
            }
        }
    }
}

/* A proper multi-line comment */
'''

String exampleContentInvalid = ''' 
/* 
This is a multi-line comment
/* Another comment block (nested) */
But this should still be inside the same comment block.
*/ 

pipeline {
    agent any // This is a single-line comment
    stages {
        def myVar = 'Hello' // Variable declaration
        String anotherVar // Variable declaration without initialization
        stage('Build') { 
            steps {
                echo 'Building...' 
            }
        }
    }
}

/* A proper multi-line comment */
'''

// Test with valid example
boolean isValid = isFileValid(exampleContentValid)
println "Valid File Check: ${isValid} (Expected: true)"

// Test with invalid example
isValid = isFileValid(exampleContentInvalid)
println "Invalid File Check: ${isValid} (Expected: false)"
